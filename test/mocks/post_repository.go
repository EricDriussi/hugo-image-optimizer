// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PostRepository is an autogenerated mock type for the PostRepository type
type PostRepository struct {
	mock.Mock
}

// Load provides a mock function with given fields:
func (_m *PostRepository) Load() (map[string][]byte, error) {
	ret := _m.Called()

	var r0 map[string][]byte
	var r1 error
	if rf, ok := ret.Get(0).(func() (map[string][]byte, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() map[string][]byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string][]byte)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPostRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewPostRepository creates a new instance of PostRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPostRepository(t mockConstructorTestingTNewPostRepository) *PostRepository {
	mock := &PostRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
